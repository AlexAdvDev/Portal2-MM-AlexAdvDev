//---------------------------------------------------
//         *****!Do not edit this file!*****
//---------------------------------------------------
//    ____
//   / ___|  __ ___   _____
//   \___ \ / _` \ \ / / _ \
//    ___) | (_| |\ V /  __/
//   |____/ \__,_| \_/_\___|
//   / ___| _   _ ___| |_ ___ _ __ ___  _
//   \___ \| | | / __| __/ _ \ '_ ` _ \(_)
//    ___) | |_| \__ \ ||  __/ | | | | |_
//   |____/ \__, |___/\__\___|_| |_| |_(_)
//          |___/
//---------------------------------------------------
// Purpose:
// Creates the functionality of our custom save
// system for maps that support it.
// Will not be avaliable for maps that don't use it.
// THIS SCRIPT IS STILL A WIP, ISSUES MIGHT OCCUR!
//---------------------------------------------------
//
// Save System Terminology:
// Enabled: The save system has started successfully on the python scripts end
// Disabled: The save system didn't start successfully on the python scripts end
// Running: By default the save system is set to run with every play session
// Not Running: The user has defined they do not want the save system to run next play session or the system is disabled

function saveLoad() {

}

function onSave(event) { // Triggers when a map calls for a certain event to be saved
    SendToConsoleP2MM("_record SAVE/" + GetMapName().tostring + "-" + event + "-save")
    SendToConsoleP2MM("stop")
    try {
        IncludeScript("multiplayermod/savesystem/" + GetMapName().tostring + "-" + event + "-save.nut")
        printl(GetMapName().tostring + "-" + event + "-save.dem has been created")
        SendChatMessage("Map progress saved....")
        SendToConsoleP2MM("_record SAVE/savesystemcheck-mapsaved")
        SendToConsoleP2MM("stop")
    } catch (e){
        SendChatMessage("Map failed to save, check console...")
        printl("Save system check failed to complete...")
        printl(e)
    }
}

/*
    Init for our save system
    We must check to make sure the python save system script is active or it won't work
    If it fails we'll tell mapspawn.nut that saves aren't currently supported
*/

printl("Starting the custom save system!")
//Makes a temporary .dem file for our python save system to check
SendToConsoleP2MM("_record SAVE/savesystemcheck-test")
SendToConsoleP2MM("stop")

try {
    IncludeScript("multiplayermod/savesystem/savesystemcheck-pythonsuccess.nut")
    printl("Save System works! Will be avaliable for the map...")
    saveCheck <- true
    SendToConsoleP2MM("_record SAVE/savesystemcheck-nutsuccess")
    SendToConsoleP2MM("stop")
} catch (e){
    printl("First check detection failed, trying again...")
    printl(e)
    local savesystemcheckerrors = 0
    while (savesystemcheckerrors != 3) {
        try {
            IncludeScript("multiplayermod/savesystem/savesystem-pythonsuccess.nut")
            break
        } catch (e){
            printl("Check detection failed, will try again...")
            printl(e)
            savesystemcheckerrors += 1
        }
    }

    if (savesystemcheckerrors = 3) {
        printl("Save System check detection failed after checking three times!")
        printl("The save system will not be avaliable for this map...")
        saveCheck <- false
        SendToConsoleP2MM("_record SAVE/savesystemcheck-nutfail")
        SendToConsoleP2MM("stop")
        savesystemcheckerrors = 0
    } else {
        printl("Save System works! Will be avaliable for the map...")
        saveCheck <- true
        SendToConsoleP2MM("_record SAVE/savesystemcheck-nutsuccess")
        SendToConsoleP2MM("stop")
        savesystemcheckerrors = 0
    }
}